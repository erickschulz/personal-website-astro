---
const { page, bodyClass } = Astro.props;
---
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width" />
  <title>Erick Schulz</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body class={bodyClass}>
  <header id="main-header" class="top-nav">
    <div class="nav-container">
      <a href="/" class="logo">Erick Schulz</a>
      <button class="mobile-nav-toggle" aria-controls="nav-links" aria-expanded="false">
        <span class="sr-only">Menu</span>
        <i class="fas fa-bars"></i>
      </button>
      <div class="nav-links" id="nav-links">
        <a href="/cv" class="nav-link">CV</a>
     
   <div class="dropdown">
          <button class="nav-link dropbtn">Explore <i class="fas fa-caret-down"></i></button>
          <div class="dropdown-content">
            <a href="/phd_preface">PhD Preface</a>
            <a href="https://thermal-network.pages.dev/" target="_blank" rel="noopener noreferrer">Thermal Network Docs</a>
            <a href="https://configure.zsa.io/voyager/layouts/Zl9ro/6a3wrn/0" target="_blank" rel="noopener noreferrer">Keyboard Layout</a>
            <a href="https://github.com/erickschulz/NPDECODES" target="_blank" rel="noopener noreferrer">NPDECODES</a>
     
     </div>
        </div>
        <a href="/contact" class="nav-link">Contact</a>
      </div>
    </div>
  </header>
  
  <slot />

  <style is:global>
    :root {
      --background: #f8f9fa;
--text-primary: #212529;
      --text-secondary: #6c757d;
      --border: #dee2e6;
      --card-background: #ffffff;
    }
    
    body.dark {
      --background: #121212;
--text-primary: #e0e0e0;
      --text-secondary: #b0b0b0;
      --border: #333333;
      --card-background: #1e1e1e;
    }

    html {
      overflow-y: scroll;
      box-sizing: border-box;
    }

    *, *::before, *::after {
      box-sizing: inherit;
    }

    html, body {
      height: 100%;
margin: 0;
      padding: 0;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
background-color: var(--background);
      color: var(--text-primary);
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      line-height: 1.6;
}
    
    body.home-gradient {
      background: linear-gradient(135deg, #f5f7fa 0%, #d1e0db 100%);
      background-attachment: fixed;

    }

    body.dark .home-gradient {
      background: linear-gradient(135deg, #1d2635 0%, #1f4247 100%);
}

    .fade-in-section {
      opacity: 0;
      transform: translateY(20px);
transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

    .fade-in-section.is-visible {
      opacity: 1;
transform: translateY(0);
    }
  </style>

  <style>
    .top-nav {
      padding: 1rem 0;
position: sticky;
      top: 0;
      z-index: 10;
      background-color: rgba(255, 255, 255, 0.8);
      backdrop-filter: blur(20px);
      border-bottom: 1px solid var(--border);
transition: all 0.3s ease;
    }
    
    .nav-container {
      max-width: 980px;
margin: 0 auto;
      padding: 0 1.5rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
}
    .logo, .nav-link {
      color: var(--text-primary);
      font-size: 1.1rem;
      font-weight: 500;
      text-decoration: none;
}
    .logo {
      font-size: 1.25rem;
      font-weight: 600;
}
    .nav-links {
      display: flex;
      align-items: center;
      gap: 1.25rem;
}
    .dropbtn {
      cursor: pointer;
      background: none;
      border: none;
      font-family: inherit;
}
    .dropdown {
      position: relative;
      display: inline-block;
}
    .dropdown-content {
      display: none;
      position: absolute;
      top: 100%;
      right: 0;
      background-color: var(--card-background);
      min-width: 200px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.1);
      border: 1px solid var(--border);
      border-radius: 12px;
      z-index: 1;
padding-top: 8px;
      padding-bottom: 8px;
      overflow: hidden;
    }
    .dropdown-content a {
      color: var(--text-primary);
padding: 10px 16px;
      text-decoration: none;
      display: block;
      font-size: 1rem;
      transition: background-color 0.2s ease;
}
    .dropdown-content a:hover {
      background-color: rgba(0,0,0,0.05);
}
    .dropdown:hover .dropdown-content, .dropbtn:focus + .dropdown-content {
      display: block;
}
    .mobile-nav-toggle {
      display: none;
      background: none;
      border: none;
      font-size: 1.5rem;
color: var(--text-primary);
      cursor: pointer;
    }
    .sr-only {
      position: absolute;
      width: 1px;
height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
}

    @media (max-width: 768px) {
      .nav-links {
        display: none;
position: absolute;
        top: 100%;
        right: 0;
        background-color: rgba(255, 255, 255, 0.95);
        width: 100%;
        flex-direction: column;
        align-items: stretch;
        padding: 1rem 0;
border-bottom: 1px solid var(--border);
      }
      .nav-links.active {
        display: flex;
}
      .nav-link, .dropbtn {
        padding: 1rem 1.5rem;
text-align: left;
        width: 100%;
      }
      .dropdown {
        width: 100%;
}
      .dropdown-content {
        position: static;
        box-shadow: none;
border: none;
        border-radius: 0;
        background-color: transparent;
        padding: 0;
        min-width: 0;
}
      .dropdown-content a {
        padding-left: 2.5rem;
}
      .mobile-nav-toggle {
        display: block;
}

      /* Added styles for mobile dropdown functionality */
      .dropdown.is-open > .dropdown-content {
        display: block;
      }
      .dropbtn .fa-caret-down {
        transition: transform 0.3s ease-out;
      }
      .dropdown.is-open .dropbtn .fa-caret-down {
        transform: rotate(180deg);
      }
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const sections = document.querySelectorAll('.fade-in-section');

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('is-visible');
            observer.unobserve(entry.target);
          }
        
});
      }, { threshold: 0.1 });

      sections.forEach((section, index) => {
        // Stagger the observation slightly for a nicer effect
        setTimeout(() => {
          observer.observe(section);
        }, index * 100);
      });

      const mobileNavToggle = document.querySelector('.mobile-nav-toggle');
      const navLinks = document.querySelector('.nav-links');
      mobileNavToggle.addEventListener('click', () => {
        const isExpanded = mobileNavToggle.getAttribute('aria-expanded') === 'true';
        mobileNavToggle.setAttribute('aria-expanded', !isExpanded);
        navLinks.classList.toggle('active');
      });

      // Added script for mobile dropdown functionality
      const dropdowns = document.querySelectorAll('.dropdown');
      dropdowns.forEach(dropdown => {
        const button = dropdown.querySelector('.dropbtn');
        button.addEventListener('click', (event) => {
          if (window.innerWidth <= 768) {
            event.preventDefault();
            dropdown.classList.toggle('is-open');
          }
        });
      });
    });
  </script>
</body>
</html>
